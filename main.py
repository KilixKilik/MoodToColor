import random

# –º–∞–ø–ø–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π ‚Üí HEX + ANSI escape-–∫–æ–¥—ã (RGB –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞)
MOODS = {
    "—Ä–∞–¥–æ—Å—Ç—å": ("#FFD700", "\033[48;2;255;215;0m"),
    "–≥—Ä—É—Å—Ç—å": ("#4682B4", "\033[48;2;70;130;180m"),
    "–∑–ª–æ—Å—Ç—å": ("#FF4500", "\033[48;2;255;69;0m"),
    "—Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ": ("#ADFF2F", "\033[48;2;173;255;47m"),
    "—Å—Ç—Ä–∞—Ö": ("#2F4F4F", "\033[48;2;47;79;79m"),
    "–ª—é–±–æ–≤—å": ("#FF69B4", "\033[48;2;255;105;180m"),
    "—Ö–∞–æ—Å": ("#8A2BE2", "\033[48;2;138;43;226m"),
    "—É–¥–∏–≤–ª–µ–Ω–∏–µ": ("#FFA500", "\033[48;2;255;165;0m"),
    "—Å–∫—É–∫–∞": ("#A9A9A9", "\033[48;2;169;169;169m"),
    "–Ω–∞–¥–µ–∂–¥–∞": ("#32CD32", "\033[48;2;50;205;50m"),
}

RESET = "\033[0m"  # —Å–±—Ä–æ—Å —Ü–≤–µ—Ç–∞


def feel_it(mood=None):
    """–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–≤–µ—Ç –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é –∏–ª–∏ —Å–ª—É—á–∞–π–Ω–æ–º—É –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é"""
    if not mood:
        mood = random.choice(list(MOODS.keys()))
    hex_code, ansi_bg = MOODS.get(mood, MOODS["—Å–∫—É–∫–∞"])  # fallback –Ω–∞ "—Å–∫—É–∫–∞"
    return mood, hex_code, ansi_bg


def render_color_block(ansi_bg, size=8):
    """—Ä–∏—Å—É–µ—Ç —Ü–≤–µ—Ç–Ω–æ–π –±–ª–æ–∫ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"""
    block = "‚ñà" * size
    print(f"{ansi_bg}{block}{RESET}")


def main():
    print("üé® MoodToColor ‚Äî –≤–≤–µ–¥–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–ª–∏ –æ—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ:")
    user_input = input("> ").strip().lower()

    mood, hex_code, ansi_bg = feel_it(user_input if user_input else None)

    print(f"\n–¢–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {mood}")
    print(f"üé® HEX: {hex_code}")
    render_color_block(ansi_bg)


if __name__ == "__main__":
    main()  # –∑–∞–ø—É—Å–∫

# Github: @KilixKilik
